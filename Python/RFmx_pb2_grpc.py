# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import RFmx_pb2 as RFmx__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class RFmxServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Initialize = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/Initialize',
                request_serializer=RFmx__pb2.RFmxResource.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxSession.FromString,
                )
        self.GetDefaultInstrumentConfiguration = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/GetDefaultInstrumentConfiguration',
                request_serializer=RFmx__pb2.RFmxSession.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxInstrumentConfiguration.FromString,
                )
        self.ConfigureInstrument = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/ConfigureInstrument',
                request_serializer=RFmx__pb2.RFmxInstrumentConfiguration.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetDefaultCommonConfiguration = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/GetDefaultCommonConfiguration',
                request_serializer=RFmx__pb2.RFmxSession.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxCommonConfiguration.FromString,
                )
        self.GetDefaultAutoLevelConfiguration = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/GetDefaultAutoLevelConfiguration',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxAutoLevelConfiguration.FromString,
                )
        self.Close = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/Close',
                request_serializer=RFmx__pb2.RFmxSession.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ForceClose = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/ForceClose',
                request_serializer=RFmx__pb2.RFmxSession.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NRGetDefaultComponentCarrierConfiguration = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultComponentCarrierConfiguration',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxNRComponentCarrierConfiguration.FromString,
                )
        self.NRGetDefaultStandardConfiguration = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultStandardConfiguration',
                request_serializer=RFmx__pb2.RFmxSession.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxNRStandardConfiguration.FromString,
                )
        self.NRGetDefaultModAccConfiguration = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultModAccConfiguration',
                request_serializer=RFmx__pb2.RFmxSession.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxNRModAccConfiguration.FromString,
                )
        self.NRGetDefaultAcpConfiguration = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultAcpConfiguration',
                request_serializer=RFmx__pb2.RFmxSession.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxNRAcpConfiguration.FromString,
                )
        self.NRConfigureCommon = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureCommon',
                request_serializer=RFmx__pb2.RFmxCommonConfiguration.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NRConfigureStandard = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureStandard',
                request_serializer=RFmx__pb2.RFmxNRStandardConfiguration.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NRConfigureModAcc = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureModAcc',
                request_serializer=RFmx__pb2.RFmxNRModAccConfiguration.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NRConfigureAcp = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureAcp',
                request_serializer=RFmx__pb2.RFmxNRAcpConfiguration.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NRSelectAndInitiateMeasurements = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRSelectAndInitiateMeasurements',
                request_serializer=RFmx__pb2.RFmxNRMeasurementConfiguration.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NRFetchModAccResults = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRFetchModAccResults',
                request_serializer=RFmx__pb2.RFmxResultQuery.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxNRModAccResults.FromString,
                )
        self.NRFetchAcpResults = channel.unary_unary(
                '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRFetchAcpResults',
                request_serializer=RFmx__pb2.RFmxResultQuery.SerializeToString,
                response_deserializer=RFmx__pb2.RFmxNRAcpResults.FromString,
                )


class RFmxServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Initialize(self, request, context):
        """Instr
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultInstrumentConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureInstrument(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultCommonConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultAutoLevelConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForceClose(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRGetDefaultComponentCarrierConfiguration(self, request, context):
        """NR
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRGetDefaultStandardConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRGetDefaultModAccConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRGetDefaultAcpConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRConfigureCommon(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRConfigureStandard(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRConfigureModAcc(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRConfigureAcp(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRSelectAndInitiateMeasurements(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRFetchModAccResults(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NRFetchAcpResults(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RFmxServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Initialize': grpc.unary_unary_rpc_method_handler(
                    servicer.Initialize,
                    request_deserializer=RFmx__pb2.RFmxResource.FromString,
                    response_serializer=RFmx__pb2.RFmxSession.SerializeToString,
            ),
            'GetDefaultInstrumentConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultInstrumentConfiguration,
                    request_deserializer=RFmx__pb2.RFmxSession.FromString,
                    response_serializer=RFmx__pb2.RFmxInstrumentConfiguration.SerializeToString,
            ),
            'ConfigureInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureInstrument,
                    request_deserializer=RFmx__pb2.RFmxInstrumentConfiguration.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDefaultCommonConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultCommonConfiguration,
                    request_deserializer=RFmx__pb2.RFmxSession.FromString,
                    response_serializer=RFmx__pb2.RFmxCommonConfiguration.SerializeToString,
            ),
            'GetDefaultAutoLevelConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultAutoLevelConfiguration,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=RFmx__pb2.RFmxAutoLevelConfiguration.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=RFmx__pb2.RFmxSession.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ForceClose': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceClose,
                    request_deserializer=RFmx__pb2.RFmxSession.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NRGetDefaultComponentCarrierConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.NRGetDefaultComponentCarrierConfiguration,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=RFmx__pb2.RFmxNRComponentCarrierConfiguration.SerializeToString,
            ),
            'NRGetDefaultStandardConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.NRGetDefaultStandardConfiguration,
                    request_deserializer=RFmx__pb2.RFmxSession.FromString,
                    response_serializer=RFmx__pb2.RFmxNRStandardConfiguration.SerializeToString,
            ),
            'NRGetDefaultModAccConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.NRGetDefaultModAccConfiguration,
                    request_deserializer=RFmx__pb2.RFmxSession.FromString,
                    response_serializer=RFmx__pb2.RFmxNRModAccConfiguration.SerializeToString,
            ),
            'NRGetDefaultAcpConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.NRGetDefaultAcpConfiguration,
                    request_deserializer=RFmx__pb2.RFmxSession.FromString,
                    response_serializer=RFmx__pb2.RFmxNRAcpConfiguration.SerializeToString,
            ),
            'NRConfigureCommon': grpc.unary_unary_rpc_method_handler(
                    servicer.NRConfigureCommon,
                    request_deserializer=RFmx__pb2.RFmxCommonConfiguration.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NRConfigureStandard': grpc.unary_unary_rpc_method_handler(
                    servicer.NRConfigureStandard,
                    request_deserializer=RFmx__pb2.RFmxNRStandardConfiguration.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NRConfigureModAcc': grpc.unary_unary_rpc_method_handler(
                    servicer.NRConfigureModAcc,
                    request_deserializer=RFmx__pb2.RFmxNRModAccConfiguration.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NRConfigureAcp': grpc.unary_unary_rpc_method_handler(
                    servicer.NRConfigureAcp,
                    request_deserializer=RFmx__pb2.RFmxNRAcpConfiguration.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NRSelectAndInitiateMeasurements': grpc.unary_unary_rpc_method_handler(
                    servicer.NRSelectAndInitiateMeasurements,
                    request_deserializer=RFmx__pb2.RFmxNRMeasurementConfiguration.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NRFetchModAccResults': grpc.unary_unary_rpc_method_handler(
                    servicer.NRFetchModAccResults,
                    request_deserializer=RFmx__pb2.RFmxResultQuery.FromString,
                    response_serializer=RFmx__pb2.RFmxNRModAccResults.SerializeToString,
            ),
            'NRFetchAcpResults': grpc.unary_unary_rpc_method_handler(
                    servicer.NRFetchAcpResults,
                    request_deserializer=RFmx__pb2.RFmxResultQuery.FromString,
                    response_serializer=RFmx__pb2.RFmxNRAcpResults.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RFmxService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Initialize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/Initialize',
            RFmx__pb2.RFmxResource.SerializeToString,
            RFmx__pb2.RFmxSession.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultInstrumentConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/GetDefaultInstrumentConfiguration',
            RFmx__pb2.RFmxSession.SerializeToString,
            RFmx__pb2.RFmxInstrumentConfiguration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfigureInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/ConfigureInstrument',
            RFmx__pb2.RFmxInstrumentConfiguration.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultCommonConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/GetDefaultCommonConfiguration',
            RFmx__pb2.RFmxSession.SerializeToString,
            RFmx__pb2.RFmxCommonConfiguration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultAutoLevelConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/GetDefaultAutoLevelConfiguration',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            RFmx__pb2.RFmxAutoLevelConfiguration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/Close',
            RFmx__pb2.RFmxSession.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForceClose(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/ForceClose',
            RFmx__pb2.RFmxSession.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRGetDefaultComponentCarrierConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultComponentCarrierConfiguration',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            RFmx__pb2.RFmxNRComponentCarrierConfiguration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRGetDefaultStandardConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultStandardConfiguration',
            RFmx__pb2.RFmxSession.SerializeToString,
            RFmx__pb2.RFmxNRStandardConfiguration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRGetDefaultModAccConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultModAccConfiguration',
            RFmx__pb2.RFmxSession.SerializeToString,
            RFmx__pb2.RFmxNRModAccConfiguration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRGetDefaultAcpConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRGetDefaultAcpConfiguration',
            RFmx__pb2.RFmxSession.SerializeToString,
            RFmx__pb2.RFmxNRAcpConfiguration.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRConfigureCommon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureCommon',
            RFmx__pb2.RFmxCommonConfiguration.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRConfigureStandard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureStandard',
            RFmx__pb2.RFmxNRStandardConfiguration.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRConfigureModAcc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureModAcc',
            RFmx__pb2.RFmxNRModAccConfiguration.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRConfigureAcp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRConfigureAcp',
            RFmx__pb2.RFmxNRAcpConfiguration.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRSelectAndInitiateMeasurements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRSelectAndInitiateMeasurements',
            RFmx__pb2.RFmxNRMeasurementConfiguration.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRFetchModAccResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRFetchModAccResults',
            RFmx__pb2.RFmxResultQuery.SerializeToString,
            RFmx__pb2.RFmxNRModAccResults.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NRFetchAcpResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NationalInstruments.ApplicationsEngineering.Services.RFmxGrpc.RFmxService/NRFetchAcpResults',
            RFmx__pb2.RFmxResultQuery.SerializeToString,
            RFmx__pb2.RFmxNRAcpResults.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
